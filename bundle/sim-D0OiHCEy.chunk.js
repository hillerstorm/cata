import{x as e,y as t,m as a,d as l,a as s,z as n,r as o,A as i,e as r,f as p,D as d,b as c,T as g,H as u,F as h,G as I,J as m,K as S,L as f,N as v,I as R,O as y,c as P}from"./preset_utils-CT2kpWfm.chunk.js";import{R as O}from"./suggest_reforges_action-HPsUwWdp.chunk.js";import{aq as A,T,ar as b,as as C,at as w,au as H,S as D,a as E,b as B,c as k,G,av as L,aw as F,ax as V,ay as q,C as x,F as U,g as M,f as N,h as W,i as K,j,U as z,E as _,R as J,m as Q,I as X,D as Y,n as Z,o as $,p as ee}from"./detailed_results-22mxnnQ_.chunk.js";import{S as te}from"./inputs-CYstuD_5.chunk.js";e({fieldName:"defensiveDelay",label:"Defensives Delay",labelTooltip:"Minimum delay between using more defensive cooldowns."});const ae={inputs:[t({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:A.Blood},{name:"Frost",value:A.Frost},{name:"Unholy",value:A.Unholy}],changeEmitter:e=>T.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"opener",label:"Opener",labelTooltip:"Chose what opener to perform:<br>\t\t\t\t<b>Regular</b>: Regular opener.<br>\t\t\t\t<b>Threat</b>: Full IT spam for max threat.",values:[{name:"Regular",value:b.Regular},{name:"Threat",value:b.Threat}],changeEmitter:e=>T.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"optimizationSetting",label:"Optimization Setting",labelTooltip:"Chose what metric to optimize:<br>\t\t\t\t<b>Hps</b>: Prioritizes holding runes for healing after damage taken.<br>\t\t\t\t<b>Tps</b>: Prioritizes spending runes for icy touch spam.",values:[{name:"Hps",value:C.Hps},{name:"Tps",value:C.Tps}],changeEmitter:e=>T.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"bloodSpell",label:"Blood Spell",labelTooltip:"Chose what blood rune spender to use.",values:[{name:"Blood Strike",value:w.BloodStrike},{name:"Blood Boil",value:w.BloodBoil},{name:"Heart Strike",value:w.HeartStrike}],changeEmitter:e=>T.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"bloodTapPrio",label:"Blood Tap",labelTooltip:"Chose how to use Blood Tap:<br>\t\t\t\t<b>Use as Defensive Cooldown</b>: Use as defined in Cooldowns (Requires T10 4pc).<br>\t\t\t\t<b>Offensive</b>: Use Blood Tap for extra Icy Touches.",values:[{name:"Use as Defensive Cooldown",value:H.Defensive},{name:"Offensive",value:H.Offensive}],changeEmitter:e=>T.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])})]},le={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-65s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-64s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-55s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-44s"}}},{action:{castSpell:{spellId:{spellId:43265}}},doAtValue:{const:{val:"-30s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-22s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-7s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-1.5s"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"55%"}}}},castSpell:{spellId:{spellId:48743}}}},{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"89s"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:81130}}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:55095}}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49222}}}]}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"60%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{auraIsActive:{auraId:{spellId:55233}}},castSpell:{spellId:{spellId:82176}}}},{action:{condition:{auraIsActive:{auraId:{spellId:96171}}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},castSpell:{spellId:{spellId:47568}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:77535}}}}}]}},castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{and:{vals:[{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"1"}}}}]}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49998,tag:1}}}]}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:81256}}}}},castSpell:{spellId:{spellId:46584}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"80%"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}}]}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{auraIsActive:{auraId:{spellId:81141}}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{cmp:{op:"OpEq",lhs:{currentNonDeathRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:57330}}}}]},se={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-65s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-64s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-55s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-44s"}}},{action:{castSpell:{spellId:{spellId:43265}}},doAtValue:{const:{val:"-30s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-22s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-7s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-1.5s"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"55%"}}}},castSpell:{spellId:{spellId:48743}}}},{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentTime:{}},rhs:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentTime:{}},rhs:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{remainingTime:{}},rhs:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{remainingTime:{}},rhs:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{condition:{spellIsReady:{spellId:{spellId:49028}}},castSpell:{spellId:{otherId:"OtherActionPotion"}}}},{action:{condition:{and:{vals:[{spellIsReady:{spellId:{spellId:49028}}},{auraIsActive:{auraId:{spellId:53365}}},{auraIsKnown:{auraId:{spellId:53365}}}]}},castSpell:{spellId:{spellId:26297}}}},{action:{condition:{and:{vals:[{spellIsReady:{spellId:{spellId:49028}}},{auraIsActive:{auraId:{spellId:53365}}},{auraIsKnown:{auraId:{spellId:53365}}}]}},castSpell:{spellId:{spellId:33697}}}},{action:{condition:{and:{vals:[{spellIsReady:{spellId:{spellId:49028}}},{auraIsActive:{auraId:{spellId:53365}}},{auraIsKnown:{auraId:{spellId:53365}}}]}},castSpell:{spellId:{spellId:82174}}}},{action:{condition:{and:{vals:[{spellIsReady:{spellId:{spellId:49028}}},{auraIsActive:{auraId:{spellId:53365}}},{auraIsKnown:{auraId:{spellId:53365}}}]}},castSpell:{spellId:{spellId:49028}}}},{action:{condition:{and:{vals:[{not:{val:{dotIsActive:{spellId:{spellId:55095}}}}},{not:{val:{dotIsActive:{spellId:{spellId:55078}}}}},{auraIsActive:{auraId:{spellId:81256}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"30%"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}}]}},castSpell:{spellId:{spellId:49222}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"70%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentNonDeathRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentNonDeathRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentNonDeathRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"0"}}}}]}},castSpell:{spellId:{spellId:47568}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{dotRemainingTime:{spellId:{spellId:55095}}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpLe",lhs:{dotRemainingTime:{spellId:{spellId:55078}}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"7s"}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentNonDeathRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"1"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"90"}}}},{cmp:{op:"OpGe",lhs:{spellTimeToReady:{spellId:{spellId:49028}}},rhs:{const:{val:"3s"}}}}]}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpGe",lhs:{runeCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"5s"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"0"}}}}]}},castSpell:{spellId:{spellId:45529}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:81256}}}}},castSpell:{spellId:{spellId:46584}}}},{action:{condition:{and:{vals:[{auraIsActive:{auraId:{spellId:96171}}},{auraIsKnown:{auraId:{spellId:96171}}}]}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{and:{vals:[{auraIsActive:{auraId:{spellId:81141}}},{auraIsKnown:{auraId:{spellId:81141}}}]}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{spellTimeToReady:{spellId:{spellId:49028}}},rhs:{const:{val:"5s"}}}}]}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:57330}}}}]},ne={items:[{id:65181,enchant:4208,gems:[52294,52218],reforging:158},{id:60227,gems:[52218],reforging:124},{id:65183,enchant:4198,gems:[52221]},{id:69879,randomSuffix:-118,enchant:4100,reforging:165},{id:65062,enchant:4103,gems:[52243,52218],reforging:161},{id:60228,enchant:4191,gems:[52218,0],reforging:144},{id:65180,enchant:4106,gems:[52242,0],reforging:165},{id:65369,randomSuffix:-223,gems:[52218,52242]},{id:65182,enchant:4127,gems:[52231,52231],reforging:167},{id:65075,enchant:4062,gems:[52243],reforging:160},{id:60226,gems:[52231],reforging:145},{id:65106,reforging:158},{id:65048},{id:65072,reforging:160},{id:65003,enchant:3368,reforging:145},{},{id:64674,gems:[52242],reforging:160}]},oe={items:[{id:71478,enchant:4208,gems:[68779,52243]},{id:71563,reforging:160},{id:71612,enchant:4198,gems:[52218],reforging:124},{id:71227,enchant:4100,reforging:158},{id:71469,enchant:4103,gems:[52243,52218]},{id:71470,enchant:4191,gems:[52242,0],reforging:131},{id:71419,enchant:4106,gems:[52243,0],reforging:167},{id:71443,gems:[52218,52242],reforging:160},{id:71479,enchant:4127,gems:[52221,52242],reforging:158},{id:71404,enchant:4062,gems:[52243],reforging:144},{id:71215,gems:[52243],reforging:145},{id:71433,gems:[52221],reforging:158},{id:65072,reforging:160},{id:69109},{id:70723,enchant:3368,gems:[52243,52243],reforging:145},{},{id:71587,gems:[52242],reforging:144}]},ie={items:[{id:71478,enchant:4206,gems:[52294,52242],reforging:153},{id:71563},{id:71612,enchant:4198,gems:[52218]},{id:71227,enchant:4100,reforging:151},{id:71469,enchant:4103,gems:[52243,52218]},{id:71470,enchant:4191,gems:[52242,0]},{id:71477,enchant:4107,gems:[52243,0]},{id:71443,gems:[52218,52242]},{id:71431,enchant:4270,gems:[52221,52242]},{id:71404,enchant:4062,gems:[52243]},{id:60226,gems:[52242]},{id:71433,gems:[52221]},{id:65048},{id:69109},{id:70723,enchant:3368,gems:[52243,52243],reforging:165},{},{id:71587,gems:[52242],reforging:153}]},re={items:[{id:71478,enchant:4208,gems:[68779,52243],reforging:153},{id:71446},{id:71480,enchant:4202,gems:[52218],reforging:168},{id:71227,enchant:4100,reforging:152},{id:71469,enchant:4103,gems:[52243,52218],reforging:168},{id:71418,enchant:4191,gems:[0]},{id:71419,enchant:4106,gems:[52243,0],reforging:168},{id:71250,gems:[52218,52242]},{id:71479,enchant:4127,gems:[52221,52242]},{id:71404,enchant:4062,gems:[52243],reforging:153},{id:71215,gems:[52243]},{id:71433,gems:[52221]},{id:65072},{id:69167},{id:70723,enchant:3368,gems:[52243,52243],reforging:165},{},{id:71587,gems:[52242],reforging:153}]},pe=a("Pre-Raid",{items:[{id:59359,enchant:4206,gems:[52294,59480,59493]},{id:56319,reforging:129},{id:56318,enchant:4198,gems:[52221]},{id:62383,enchant:4100,reforging:122},{id:55058,enchant:4103,gems:[52242],reforging:133},{id:57870,enchant:3850,gems:[52231,0]},{id:56428,enchant:4121,gems:[52221,0],reforging:129},{id:55059,gems:[52242,52242],reforging:122},{id:58102,enchant:4270,gems:[52231,52242],reforging:126},{id:62418,enchant:4062,gems:[52242],reforging:132},{id:56444},{id:62440},{id:58483,gems:[52242]},{id:56347},{id:56342,enchant:3847,reforging:151},{},{id:62243,gems:[52242],reforging:139}]}),de=a("P1",ne),ce=a("P3-Balanced",oe),ge=a("P3-Defensive",ie),ue=a("P3-Offensive",re),he=l("Simple",se),Ie=l("Defensive",le),me=s("P1",D.fromMap({[E.StatStrength]:2.45,[E.StatAgility]:1.2,[E.StatStamina]:3,[E.StatAttackPower]:1,[E.StatHitRating]:6,[E.StatCritRating]:1.65,[E.StatHasteRating]:1.58,[E.StatExpertiseRating]:5,[E.StatArmor]:1,[E.StatDodgeRating]:2.5,[E.StatParryRating]:2.44,[E.StatBonusArmor]:1,[E.StatMasteryRating]:7},{[B.PseudoStatMainHandDps]:12.29,[B.PseudoStatOffHandDps]:0})),Se=s("P3",D.fromMap({[E.StatStrength]:2.47,[E.StatAgility]:1.46,[E.StatStamina]:7,[E.StatAttackPower]:1,[E.StatHitRating]:6,[E.StatCritRating]:1,[E.StatHasteRating]:4,[E.StatExpertiseRating]:5,[E.StatArmor]:1,[E.StatDodgeRating]:.5,[E.StatParryRating]:.5,[E.StatBonusArmor]:1,[E.StatMasteryRating]:3},{[B.PseudoStatMainHandDps]:12.34,[B.PseudoStatOffHandDps]:0})),fe={name:"Blood",data:k.create({talentsString:"02323203102122111321-3-033",glyphs:G.create({prime1:L.GlyphOfDeathStrike,prime2:L.GlyphOfHeartStrike,prime3:L.GlyphOfRuneStrike,major1:F.GlyphOfAntiMagicShell,major2:F.GlyphOfDancingRuneWeapon,major3:F.GlyphOfBoneShield,minor1:V.GlyphOfDeathGate,minor2:V.GlyphOfPathOfFrost,minor3:V.GlyphOfHornOfWinter})})},ve=n("P1",{gear:de,epWeights:me}),Re=n("P3",{gear:ce,epWeights:Se}),ye=q.create({classOptions:{startingRunicPower:0}}),Pe=x.create({flask:U.FlaskOfSteelskin,food:M.FoodBeerBasedCrocolisk,defaultPotion:N.GolembloodPotion,prepopPotion:N.GolembloodPotion,tinkerHands:W.TinkerHandsSynapseSprings}),Oe={profession1:K.Engineering,profession2:K.Leatherworking,distanceFromTarget:5},Ae=o(Z.SpecBloodDeathKnight,{cssClass:"blood-death-knight-sim-ui",cssScheme:j.getCssClass(j.DeathKnight),knownIssues:[],epStats:[E.StatStamina,E.StatStrength,E.StatAgility,E.StatAttackPower,E.StatExpertiseRating,E.StatHitRating,E.StatCritRating,E.StatHasteRating,E.StatHealth,E.StatArmor,E.StatBonusArmor,E.StatDodgeRating,E.StatParryRating,E.StatNatureResistance,E.StatShadowResistance,E.StatFrostResistance,E.StatMasteryRating],epPseudoStats:[B.PseudoStatMainHandDps,B.PseudoStatOffHandDps],epReferenceStat:E.StatAttackPower,displayStats:z.createDisplayStatArray([E.StatHealth,E.StatArmor,E.StatStamina,E.StatStrength,E.StatAgility,E.StatAttackPower,E.StatExpertiseRating,E.StatMasteryRating],[B.PseudoStatSpellHitPercent,B.PseudoStatSpellCritPercent,B.PseudoStatPhysicalHitPercent,B.PseudoStatPhysicalCritPercent,B.PseudoStatMeleeHastePercent,B.PseudoStatDodgePercent,B.PseudoStatParryPercent]),defaults:{gear:ce.gear,epWeights:Se.epWeights,statCaps:(()=>{const e=(new D).withPseudoStat(B.PseudoStatPhysicalHitPercent,8),t=(new D).withStat(E.StatExpertiseRating,26*_);return e.add(t)})(),other:Oe,consumes:Pe,talents:fe.data,specOptions:ye,raidBuffs:J.create({retributionAura:!0,powerWordFortitude:!0,markOfTheWild:!0,icyTalons:!0,hornOfWinter:!0,abominationsMight:!0,leaderOfThePack:!0,bloodlust:!0,arcaneTactics:!0,devotionAura:!0,resistanceAura:!0}),partyBuffs:Q.create({}),individualBuffs:X.create({}),debuffs:Y.create({bloodFrenzy:!0,faerieFire:!0,ebonPlaguebringer:!0,criticalMass:!0,vindication:!0,frostFever:!0})},modifyDisplayStats:e=>{const t=e.getCurrentStats();if(t.finalStats){const e=.08*t.finalStats.stats[E.StatStamina],a=14*e;return{buffs:(new D).addStat(E.StatHealth,a).addStat(E.StatStamina,e)}}return{}},playerIconInputs:[],rotationInputs:ae,includeBuffDebuffInputs:[i,r],excludeBuffDebuffInputs:[p,d],otherInputs:{inputs:[c,g,u,h,I,m,S,f,v,R,te(),y]},encounterPicker:{showExecuteProportion:!1},presets:{epWeights:[me,Se],rotations:[he,Ie],talents:[fe],gear:[pe,de,ce,ge,ue],builds:[ve,Re]},autoRotation:e=>he.rotation.rotation,raidSimPresets:[{spec:Z.SpecBloodDeathKnight,talents:fe.data,specOptions:ye,consumes:Pe,defaultFactionRaces:{[$.Unknown]:ee.RaceUnknown,[$.Alliance]:ee.RaceWorgen,[$.Horde]:ee.RaceOrc},defaultGear:{[$.Unknown]:{},[$.Alliance]:{1:de.gear,2:de.gear,3:de.gear,4:de.gear},[$.Horde]:{1:de.gear,2:de.gear,3:de.gear,4:de.gear}},otherDefaults:Oe}]});class Te extends P{constructor(e,t){super(e,t,Ae),t.sim.waitForInit().then((()=>{new O(this,{getEPDefaults:e=>e.getGear().getEquippedItems().some((e=>(e?.item.phase||0)>=3))?Se.epWeights:me.epWeights})}))}}export{Te as B};
